# -*- coding: utf-8 -*-
"""aula1_questao8

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13cnM5NDsUhBOR5_GJFxPbm3CeWqHqEU0
"""

def valida_cpf(cpf):
    # Remove pontos e hífen
    cpf_numeros = cpf.replace(".", "").replace("-", "")

    # Verifica se tem exatamente 11 dígitos e se são todos números
    if len(cpf_numeros) != 11 or not cpf_numeros.isdigit():
        return "Inválido"

    # Verifica se todos os dígitos são iguais (caso inválido comum)
    if cpf_numeros == cpf_numeros[0] * 11:
        return "Inválido"

    # Extrai os 9 primeiros dígitos e os 2 últimos (verificadores)
    cpf_base = cpf_numeros[:9]
    digitos_informados = cpf_numeros[9:]

    # Calcula o primeiro dígito verificador
    soma1 = 0
    for i in range(9):
        soma1 += int(cpf_base[i]) * (10 - i)
    resto1 = soma1 % 11
    digito1 = 0 if resto1 < 2 else 11 - resto1

    # Calcula o segundo dígito verificador
    cpf_com_d1 = cpf_base + str(digito1)
    soma2 = 0
    for i in range(10):
        soma2 += int(cpf_com_d1[i]) * (11 - i)
    resto2 = soma2 % 11
    digito2 = 0 if resto2 < 2 else 11 - resto2

    # Compara os dígitos calculados com os informados
    if digitos_informados == f"{digito1}{digito2}":
        return "Válido"
    else:
        return "Inválido"

# Execução
cpf = input("Digite o CPF (formato XXX.XXX.XXX-XX): ")
print(valida_cpf(cpf))