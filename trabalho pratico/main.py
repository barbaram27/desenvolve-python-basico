# -*- coding: utf-8 -*-
"""main

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NzmtRj27PUdT3Crrn8aa3_dbOtVs5Eqv
"""

from google.colab import files
uploaded = files.upload()

from google.colab import files
uploaded = files.upload()

import csv

# --- Estruturas de dados ---
usuarios = []  # lista de dicts com dados do usuário
produtos = []  # lista de dicts com dados dos produtos

# --- Funções para manipular usuários ---

def carregar_usuarios():
    """Carrega usuários do arquivo usuarios.csv para a lista usuarios."""
    try:
        with open('usuarios.csv', newline='', encoding='utf-8') as f:
            reader = csv.DictReader(f)
            for row in reader:
                usuarios.append(row)
    except FileNotFoundError:
        print("Arquivo de usuários não encontrado, iniciando vazio.")

def salvar_usuarios():
    """Salva a lista usuarios no arquivo usuarios.csv."""
    with open('usuarios.csv', 'w', newline='', encoding='utf-8') as f:
        fieldnames = ['login', 'senha', 'nivel']
        writer = csv.DictWriter(f, fieldnames=fieldnames)
        writer.writeheader()
        for u in usuarios:
            writer.writerow(u)

def criar_usuario():
    """Cria um novo usuário e adiciona à lista."""
    login = input("Login: ")
    senha = input("Senha: ")
    nivel = input("Nível (gerente, funcionario, cliente): ").lower()
    usuarios.append({'login': login, 'senha': senha, 'nivel': nivel})
    salvar_usuarios()
    print("Usuário criado com sucesso!")

def listar_usuarios():
    """Lista todos os usuários cadastrados."""
    for u in usuarios:
        print(f"Login: {u['login']}, Nível: {u['nivel']}")

# --- Funções para manipular produtos ---

def carregar_produtos():
    """Carrega produtos do arquivo produtos.csv para a lista produtos."""
    try:
        with open('produtos.csv', newline='', encoding='utf-8') as f:
            reader = csv.DictReader(f)
            for row in reader:
                row['preco'] = float(row['preco'])
                row['quantidade'] = int(row['quantidade'])
                produtos.append(row)
    except FileNotFoundError:
        print("Arquivo de produtos não encontrado, iniciando vazio.")

def salvar_produtos():
    """Salva a lista produtos no arquivo produtos.csv."""
    with open('produtos.csv', 'w', newline='', encoding='utf-8') as f:
        fieldnames = ['codigo', 'nome', 'preco', 'quantidade']
        writer = csv.DictWriter(f, fieldnames=fieldnames)
        writer.writeheader()
        for p in produtos:
            writer.writerow(p)

def listar_produtos():
    """Lista os produtos cadastrados ordenados por nome."""
    for p in sorted(produtos, key=lambda x: x['nome']):
        print(f"Código: {p['codigo']}, Nome: {p['nome']}, Preço: R${p['preco']:.2f}, Quantidade: {p['quantidade']}")

def buscar_produto_por_nome():
    """Busca um produto pelo nome."""
    nome_busca = input("Digite o nome do produto para buscar: ").lower()
    achados = [p for p in produtos if nome_busca in p['nome'].lower()]
    if achados:
        for p in achados:
            print(f"Código: {p['codigo']}, Nome: {p['nome']}, Preço: R${p['preco']:.2f}, Quantidade: {p['quantidade']}")
    else:
        print("Produto não encontrado.")

# --- Sistema de login simples ---

def login():
    """Solicita login e senha e retorna o usuário se autenticado."""
    login_input = input("Login: ")
    senha_input = input("Senha: ")
    for u in usuarios:
        if u['login'] == login_input and u['senha'] == senha_input:
            print(f"Bem-vindo(a) {login_input}!")
            return u
    print("Login ou senha incorretos.")
    return None

# --- Menu principal ---

def menu_gerente():
    while True:
        print("\nMenu Gerente:\n1-Criar usuário\n2-Listar usuários\n3-Listar produtos\n4-Buscar produto\n5-Sair")
        opc = input("Opção: ")
        if opc == '1':
            criar_usuario()
        elif opc == '2':
            listar_usuarios()
        elif opc == '3':
            listar_produtos()
        elif opc == '4':
            buscar_produto_por_nome()
        elif opc == '5':
            break
        else:
            print("Opção inválida.")

def menu_funcionario():
    while True:
        print("\nMenu Funcionário:\n1-Listar produtos\n2-Buscar produto\n3-Sair")
        opc = input("Opção: ")
        if opc == '1':
            listar_produtos()
        elif opc == '2':
            buscar_produto_por_nome()
        elif opc == '3':
            break
        else:
            print("Opção inválida.")

def menu_cliente():
    while True:
        print("\nMenu Cliente:\n1-Listar produtos\n2-Sair")
        opc = input("Opção: ")
        if opc == '1':
            listar_produtos()
        elif opc == '2':
            break
        else:
            print("Opção inválida.")

def main():
    carregar_usuarios()
    carregar_produtos()
    usuario = login()
    if not usuario:
        return

    nivel = usuario['nivel']
    if nivel == 'gerente':
        menu_gerente()
    elif nivel == 'funcionario':
        menu_funcionario()
    elif nivel == 'cliente':
        menu_cliente()
    else:
        print("Nível de usuário desconhecido.")

if __name__ == "__main__":
    main()